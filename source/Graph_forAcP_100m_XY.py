# -*- coding: utf-8 -*-
####################################################
### 慶応大学競走部 100m アカパデータのグラフ化
### 加速度XY等の平面表示
####################################################
import sys
import time
import numpy as np
import pandas as pd
import pyqtgraph as pg
from pyqtgraph.Qt import QtGui, QtCore

shift = 100
n = 4       # plotRange
sample=20       # skipData
skip=200
slp=1       # sleep deley sec
skip_d = sample/2 #DeleySkip
flg_pause = False
flg_close = False
flg_FW = False
flg_RW = False
flg_FW_d = False
flg_RW_d = False
# StartRow
st_row =0#17200
xmin,xmax=17230,18491   # No1 M 2

## FIR
def fir(x, b):
    """FIRフィルタ
    x: 入力信号
    b: フィルタ係数"""
    y = [0.0] * len(x)  # フィルタの出力信号
    N = len(b) - 1      # フィルタ係数の数
    for n in range(len(x)):
        for i in range(N+1):
            if n - i >= 0:
                y[n] += b[i] * x[n - i]
    return y

## ファイル選択ダイアログ
def FileSelectDialog(path='',multi=False):
    import tkinter
    from tkinter import filedialog,messagebox

#    if __name__ == "__main__":
    root = tkinter.Tk()
    root.withdraw()

    ftype=[('Csv file','*.csv'),('All files','*.*')]
    ftitle="処理するデータファイルを選択して下さい"
    defext='.csv'

    if len(path) != 0:
        idir = path.replace("\\","/")
    else:
        idir='c:/'
    filename = filedialog.askopenfilename(initialdir=idir,defaultextension=defext,title=ftitle,multiple=multi,filetypes=ftype)

    if filename:
        #tkMessageBox.showinfo('選択したファイル', filename)
        fpath = filename
    else:
        fpath = ""

    return fpath #.replace("u'","").replace("'","")


# 0.01 N=255
lpf2=[1.989290819884579e-04, 2.020575433865552e-04, 2.051516091989415e-04, 2.081996330977259e-04, 2.111751912741412e-04, 2.140367193339099e-04, 2.167273156415889e-04, 2.191747170206050e-04, 2.212914513891324e-04, 2.229751705304462e-04, 2.241091647695341e-04, 2.245630598657151e-04, 2.241936949441785e-04, 2.228461787885058e-04, 2.203551203122980e-04, 2.165460275320762e-04, 2.112368678868061e-04, 2.042397813028399e-04, 1.953629359977577e-04, 1.844125156634102e-04, 1.711948253779435e-04, 1.555185023790052e-04, 1.371968166954862e-04, 1.160500455924281e-04, 9.190790484186558e-05, 6.461201899956731e-05, 3.401841215139916e-05, 3.661887220823414e-19, -3.755093630129276e-05, -7.872031448985448e-05, -1.235698738240877e-04, -1.721348761654458e-04, -2.244219055801392e-04, -2.804067862882341e-04, -3.400326384018993e-04, -4.032080903635493e-04, -4.698056663202871e-04, -5.396603658561347e-04, -6.125684525517063e-04, -6.882864667570365e-04, -7.665304767528419e-04, -8.469755811451933e-04, -9.292556738959922e-04, -1.012963481845040e-03, -1.097650882938136e-03, -1.182829511649419e-03, -1.267971656285669e-03, -1.352511450996788e-03, -1.435846363401927e-03, -1.517338976786979e-03, -1.596319063849076e-03, -1.672085946970268e-03, -1.743911138008875e-03, -1.811041248616490e-03, -1.872701160134567e-03, -1.928097440210339e-03, -1.976421991410698e-03, -2.016855915317519e-03, -2.048573573871588e-03, -2.070746828106869e-03, -2.082549432894260e-03, -2.083161564905491e-03, -2.071774459723812e-03, -2.047595132878801e-03, -2.009851158576680e-03, -1.957795479043582e-03, -1.890711216704199e-03, -1.807916460888796e-03, -1.708769000402791e-03, -1.592670973109291e-03, -1.459073403669332e-03, -1.307480600758973e-03, -1.137454385437796e-03, -9.486181228794241e-04, -7.406605303898368e-04, -5.133392355310157e-04, -2.664840592318052e-04, -1.414401357206559e-18, 2.861301032565904e-04, 5.918432507441497e-04, 9.169943228815064e-04, 1.261354500401555e-03, 1.624610078915173e-03, 2.006361691323237e-03, 2.406123949284168e-03, 2.823325512675064e-03, 3.257309593636919e-03, 3.707334899382793e-03, 4.172577015486383e-03, 4.652130228871927e-03, 5.145009787210053e-03, 5.650154588903300e-03, 6.166430295334913e-03, 6.692632854570930e-03, 7.227492423263608e-03, 7.769677671119344e-03, 8.317800449981351e-03, 8.870420807350879e-03, 9.426052322045160e-03, 9.983167737678765e-03, 1.054020486777081e-02, 1.109557274453565e-02, 1.164765798182058e-02, 1.219483132122116e-02, 1.273545432914302e-02, 1.326788621149610e-02, 1.379049071181160e-02, 1.430164305786900e-02, 1.479973692141604e-02, 1.528319135526222e-02, 1.575045767192864e-02, 1.620002622814587e-02, 1.663043307980678e-02, 1.704026647250145e-02, 1.742817313348488e-02, 1.779286433185085e-02, 1.813312167480206e-02, 1.844780260921226e-02, 1.873584559916210e-02, 1.899627495178929e-02, 1.922820526561558e-02, 1.943084547748747e-02, 1.960350248638325e-02, 1.974558433458293e-02, 1.985660292905769e-02, 1.993617628839709e-02, 1.998403030314044e-02, 2.000000000000000e-02, 1.998403030314044e-02, 1.993617628839709e-02, 1.985660292905769e-02, 1.974558433458293e-02, 1.960350248638325e-02, 1.943084547748747e-02, 1.922820526561558e-02, 1.899627495178929e-02, 1.873584559916210e-02, 1.844780260921226e-02, 1.813312167480206e-02, 1.779286433185085e-02, 1.742817313348488e-02, 1.704026647250145e-02, 1.663043307980678e-02, 1.620002622814587e-02, 1.575045767192864e-02, 1.528319135526222e-02, 1.479973692141604e-02, 1.430164305786900e-02, 1.379049071181160e-02, 1.326788621149610e-02, 1.273545432914302e-02, 1.219483132122116e-02, 1.164765798182058e-02, 1.109557274453565e-02, 1.054020486777081e-02, 9.983167737678765e-03, 9.426052322045160e-03, 8.870420807350879e-03, 8.317800449981351e-03, 7.769677671119344e-03, 7.227492423263608e-03, 6.692632854570930e-03, 6.166430295334913e-03, 5.650154588903300e-03, 5.145009787210053e-03, 4.652130228871927e-03, 4.172577015486383e-03, 3.707334899382793e-03, 3.257309593636919e-03, 2.823325512675064e-03, 2.406123949284168e-03, 2.006361691323237e-03, 1.624610078915173e-03, 1.261354500401555e-03, 9.169943228815064e-04, 5.918432507441497e-04, 2.861301032565904e-04, -1.414401357206559e-18, -2.664840592318052e-04, -5.133392355310157e-04, -7.406605303898368e-04, -9.486181228794241e-04, -1.137454385437796e-03, -1.307480600758973e-03, -1.459073403669332e-03, -1.592670973109291e-03, -1.708769000402791e-03, -1.807916460888796e-03, -1.890711216704199e-03, -1.957795479043582e-03, -2.009851158576680e-03, -2.047595132878801e-03, -2.071774459723812e-03, -2.083161564905491e-03, -2.082549432894260e-03, -2.070746828106869e-03, -2.048573573871588e-03, -2.016855915317519e-03, -1.976421991410698e-03, -1.928097440210339e-03, -1.872701160134567e-03, -1.811041248616490e-03, -1.743911138008875e-03, -1.672085946970268e-03, -1.596319063849076e-03, -1.517338976786979e-03, -1.435846363401927e-03, -1.352511450996788e-03, -1.267971656285669e-03, -1.182829511649419e-03, -1.097650882938136e-03, -1.012963481845040e-03, -9.292556738959922e-04, -8.469755811451933e-04, -7.665304767528419e-04, -6.882864667570365e-04, -6.125684525517063e-04, -5.396603658561347e-04, -4.698056663202871e-04, -4.032080903635493e-04, -3.400326384018993e-04, -2.804067862882341e-04, -2.244219055801392e-04, -1.721348761654458e-04, -1.235698738240877e-04, -7.872031448985448e-05, -3.755093630129276e-05, 3.661887220823414e-19, 3.401841215139916e-05, 6.461201899956731e-05, 9.190790484186558e-05, 1.160500455924281e-04, 1.371968166954862e-04, 1.555185023790052e-04, 1.711948253779435e-04, 1.844125156634102e-04, 1.953629359977577e-04, 2.042397813028399e-04, 2.112368678868061e-04, 2.165460275320762e-04, 2.203551203122980e-04, 2.228461787885058e-04, 2.241936949441785e-04, 2.245630598657151e-04, 2.241091647695341e-04, 2.229751705304462e-04, 2.212914513891324e-04, 2.191747170206050e-04, 2.167273156415889e-04, 2.140367193339099e-04, 2.111751912741412e-04, 2.081996330977259e-04, 2.051516091989415e-04, 2.020575433865552e-04, 1.989290819884579e-04]
# 0.1 N=255
lpf1=[-1.906964985551258e-04, -1.190012659321256e-04, -1.007700179242416e-19, 1.226186337316545e-04, 2.024358085562592e-04, 2.072316590670852e-04, 1.315210970162057e-04, -6.773168486925732e-19, -1.398958282545372e-04, -2.343674278162329e-04, -2.432259006685432e-04, -1.563312675229330e-04, 1.765054096864852e-18, 1.699979833568286e-04, 2.874886040203517e-04, 3.008522113066454e-04, 1.947870141085669e-04, -3.405087583134184e-18, -2.143070367142452e-04, -3.640589249995799e-04, -3.823951926671387e-04, -2.483167218549843e-04, -4.355605470509616e-19, 2.742874111398065e-04, 4.664798728311957e-04, 4.902904038536343e-04, 3.184480892798575e-04, -1.394269885696965e-18, -3.515162278179598e-04, -5.973472951367546e-04, -6.271806448684282e-04, -4.068454200880696e-04, 4.269929912157940e-18, 4.477261090599676e-04, 7.595255638583255e-04, 7.959953444635556e-04, 5.153621369706337e-04, -2.023815192097480e-18, -5.648653144847441e-04, -9.562516934448037e-04, -1.000061974454742e-03, -6.461144702140518e-04, -1.689490170012799e-18, 7.051821664969078e-04, 1.191281601075084e-03, 1.243262689432730e-03, 8.015851671894769e-04, -2.786449113178331e-18, -8.713441972107096e-04, -1.469096865740000e-03, -1.530256174763217e-03, -9.847706801824913e-04, 9.399023944777598e-18, 1.066608044562634e-03, 1.795200332239530e-03, 1.866795719076812e-03, 1.199392830145889e-03, -3.635742289605227e-18, -1.295065376715198e-03, -2.176545516738425e-03, -2.260192982394838e-03, -1.450208632227730e-03, -5.021131661646567e-18, 1.562005887707017e-03, 2.622173258551914e-03, 2.720008793830993e-03, 1.743474025759278e-03, -4.519989523145447e-18, -1.874466203301178e-03, -3.144179668404404e-03, -3.259109345623469e-03, -2.087657042106912e-03, 1.803550325696127e-17, 2.242084505496103e-03, 3.759233012892643e-03, 3.895332555760307e-03, 2.494570854989720e-03, -5.385357603117505e-18, -2.678478474009632e-03, -4.491038523766628e-03, -4.654217674319589e-03, -2.981245364260835e-03, 5.794364307480367e-18, 3.203561958374827e-03, 5.374521275022612e-03, 5.573682715463932e-03, 3.573166850242372e-03, -6.179162686814147e-18, -3.847641872914752e-03, -6.463307974722809e-03, -6.712490634661759e-03, -4.310214745389384e-03, 6.533873627874737e-18, 4.659126829881793e-03, 7.844004755589265e-03, 8.166646386723181e-03, 5.258339515157777e-03, -6.853077706092237e-18, -5.720205310795793e-03, -9.665763984153926e-03, -1.010400360895553e-02, -6.534708780041550e-03, 7.131897985843704e-18, 7.182114266715553e-03, 1.220840373765565e-02, 1.284604847466483e-02, 8.368767275319893e-03, -7.366074532349140e-18, -9.356084211901969e-03, -1.606404084470470e-02, -1.709398746426185e-02, -1.127777042076843e-02, 7.552029496766239e-18, 1.299915013996040e-02, 2.273784769634392e-02, 2.472002206978169e-02, 1.672102347869870e-02, -7.686921780086198e-18, -2.055263722458672e-02, -3.750159479721814e-02, -4.294974010432732e-02, -3.102527209323086e-02, 7.768690440652336e-18, 4.666922086008061e-02, 1.007824694202698e-01, 1.512801499640638e-01, 1.870715257908980e-01, 2.000000000000000e-01, 1.870715257908980e-01, 1.512801499640638e-01, 1.007824694202698e-01, 4.666922086008061e-02, 7.768690440652336e-18, -3.102527209323086e-02, -4.294974010432732e-02, -3.750159479721814e-02, -2.055263722458672e-02, -7.686921780086198e-18, 1.672102347869870e-02, 2.472002206978169e-02, 2.273784769634392e-02, 1.299915013996040e-02, 7.552029496766239e-18, -1.127777042076843e-02, -1.709398746426185e-02, -1.606404084470470e-02, -9.356084211901969e-03, -7.366074532349140e-18, 8.368767275319893e-03, 1.284604847466483e-02, 1.220840373765565e-02, 7.182114266715553e-03, 7.131897985843704e-18, -6.534708780041550e-03, -1.010400360895553e-02, -9.665763984153926e-03, -5.720205310795793e-03, -6.853077706092237e-18, 5.258339515157777e-03, 8.166646386723181e-03, 7.844004755589265e-03, 4.659126829881793e-03, 6.533873627874737e-18, -4.310214745389384e-03, -6.712490634661759e-03, -6.463307974722809e-03, -3.847641872914752e-03, -6.179162686814147e-18, 3.573166850242372e-03, 5.573682715463932e-03, 5.374521275022612e-03, 3.203561958374827e-03, 5.794364307480367e-18, -2.981245364260835e-03, -4.654217674319589e-03, -4.491038523766628e-03, -2.678478474009632e-03, -5.385357603117505e-18, 2.494570854989720e-03, 3.895332555760307e-03, 3.759233012892643e-03, 2.242084505496103e-03, 1.803550325696127e-17, -2.087657042106912e-03, -3.259109345623469e-03, -3.144179668404404e-03, -1.874466203301178e-03, -4.519989523145447e-18, 1.743474025759278e-03, 2.720008793830993e-03, 2.622173258551914e-03, 1.562005887707017e-03, -5.021131661646567e-18, -1.450208632227730e-03, -2.260192982394838e-03, -2.176545516738425e-03, -1.295065376715198e-03, -3.635742289605227e-18, 1.199392830145889e-03, 1.866795719076812e-03, 1.795200332239530e-03, 1.066608044562634e-03, 9.399023944777598e-18, -9.847706801824913e-04, -1.530256174763217e-03, -1.469096865740000e-03, -8.713441972107096e-04, -2.786449113178331e-18, 8.015851671894769e-04, 1.243262689432730e-03, 1.191281601075084e-03, 7.051821664969078e-04, -1.689490170012799e-18, -6.461144702140518e-04, -1.000061974454742e-03, -9.562516934448037e-04, -5.648653144847441e-04, -2.023815192097480e-18, 5.153621369706337e-04, 7.959953444635556e-04, 7.595255638583255e-04, 4.477261090599676e-04, 4.269929912157940e-18, -4.068454200880696e-04, -6.271806448684282e-04, -5.973472951367546e-04, -3.515162278179598e-04, -1.394269885696965e-18, 3.184480892798575e-04, 4.902904038536343e-04, 4.664798728311957e-04, 2.742874111398065e-04, -4.355605470509616e-19, -2.483167218549843e-04, -3.823951926671387e-04, -3.640589249995799e-04, -2.143070367142452e-04, -3.405087583134184e-18, 1.947870141085669e-04, 3.008522113066454e-04, 2.874886040203517e-04, 1.699979833568286e-04, 1.765054096864852e-18, -1.563312675229330e-04, -2.432259006685432e-04, -2.343674278162329e-04, -1.398958282545372e-04, -6.773168486925732e-19, 1.315210970162057e-04, 2.072316590670852e-04, 2.024358085562592e-04, 1.226186337316545e-04, -1.007700179242416e-19, -1.190012659321256e-04, -1.906964985551258e-04]
##正規化低域遮断周波数 : 0.01 / 正規化高域遮断周波数 : 0.1
bpf=[-3.896255805435837e-04, -3.210588093186808e-04, -2.051516091989416e-04, -8.558099936607135e-05, -8.739382717882067e-06, -6.805060266824626e-06, -8.520621862538319e-05, -2.191747170206056e-04, -3.611872796436696e-04, -4.573425983466791e-04, -4.673350654380774e-04, -3.808943273886481e-04, -2.241936949441767e-04, -5.284819543167719e-05, 6.713348370805363e-05, 8.430618377456920e-05, -1.644985377823920e-05, -2.042397813028433e-04, -4.096699727120029e-04, -5.484714406629902e-04, -5.535900180450822e-04, -4.038352242339895e-04, -1.371968166954866e-04, 1.582373655473783e-04, 3.745719679893302e-04, 4.256783848540670e-04, 2.844296771284583e-04, -1.760458607779306e-18, -3.139652915166670e-04, -5.186269806469002e-04, -5.036107710443404e-04, -2.347105439226237e-04, 2.244219055801435e-04, 7.281328953482017e-04, 1.099558202260225e-03, 1.199203434827105e-03, 9.851678032909209e-04, 5.396603658561327e-04, 4.770313806696213e-05, -2.679652266877672e-04, -2.335314977018996e-04, 2.008611109311415e-04, 9.292556738959905e-04, 1.718145648341948e-03, 2.288932484013219e-03, 2.426092201082149e-03, 2.069556823475145e-03, 1.352511450996785e-03, 5.645021661912179e-04, 4.824211104697902e-05, 6.606288908585937e-05, 6.873152667877771e-04, 1.743911138008884e-03, 2.877649293179124e-03, 3.667901492374097e-03, 3.794893159287151e-03, 3.175814821556587e-03, 2.016855915317515e-03, 7.535081971563900e-04, -1.057986886315564e-04, -1.776435495005785e-04, 6.329529326777610e-04, 2.071774459723807e-03, 3.609601020585818e-03, 4.632024417128593e-03, 4.677804272874575e-03, 3.634185242463477e-03, 1.807916460888792e-03, -1.656972028983864e-04, -1.551508695295114e-03, -1.800035941954137e-03, -7.801764413479394e-04, 1.137454385437814e-03, 3.190702628375527e-03, 4.499893543282480e-03, 4.408671791291323e-03, 2.761054914221526e-03, -3.970956245910947e-18, -2.964608577266222e-03, -5.082881774510778e-03, -5.571211997201096e-03, -4.242599864662390e-03, -1.624610078915167e-03, 1.197200267051591e-03, 2.968397325738445e-03, 2.750357202788868e-03, 3.158572566054534e-04, -3.707334899382800e-03, -8.020218888401135e-03, -1.111543820359474e-02, -1.185750042187181e-02, -9.960369334292684e-03, -6.166430295334907e-03, -2.033506024689137e-03, 6.165123323256572e-04, 3.969687156038364e-04, -3.059460934823574e-03, -8.870420807350884e-03, -1.514625763284095e-02, -1.964893172183269e-02, -2.064420847672634e-02, -1.763028152457720e-02, -1.164765798182057e-02, -5.012717054505606e-03, -5.270505914873657e-04, -4.218377368312698e-04, -5.421723436491708e-03, -1.430164305786900e-02, -2.415582113331801e-02, -3.134723219996692e-02, -3.284444513619049e-02, -2.747779664891430e-02, -1.663043307980678e-02, -4.041116332541053e-03, 5.309674562859032e-03, 6.927157737930836e-03, -1.412098196103365e-03, -1.844780260921227e-02, -3.928848282374882e-02, -5.649786974900743e-02, -6.217794536994291e-02, -5.045611757071833e-02, -1.960350248638325e-02, 2.692363652549768e-02, 8.092586649121213e-02, 1.313439736756667e-01, 1.670874954877576e-01, 1.800000000000000e-01, 1.670874954877576e-01, 1.313439736756667e-01, 8.092586649121213e-02, 2.692363652549768e-02, -1.960350248638325e-02, -5.045611757071833e-02, -6.217794536994291e-02, -5.649786974900743e-02, -3.928848282374882e-02, -1.844780260921227e-02, -1.412098196103365e-03, 6.927157737930836e-03, 5.309674562859032e-03, -4.041116332541053e-03, -1.663043307980678e-02, -2.747779664891430e-02, -3.284444513619049e-02, -3.134723219996692e-02, -2.415582113331801e-02, -1.430164305786900e-02, -5.421723436491708e-03, -4.218377368312698e-04, -5.270505914873657e-04, -5.012717054505606e-03, -1.164765798182057e-02, -1.763028152457720e-02, -2.064420847672634e-02, -1.964893172183269e-02, -1.514625763284095e-02, -8.870420807350884e-03, -3.059460934823574e-03, 3.969687156038364e-04, 6.165123323256572e-04, -2.033506024689137e-03, -6.166430295334907e-03, -9.960369334292684e-03, -1.185750042187181e-02, -1.111543820359474e-02, -8.020218888401135e-03, -3.707334899382800e-03, 3.158572566054534e-04, 2.750357202788868e-03, 2.968397325738445e-03, 1.197200267051591e-03, -1.624610078915167e-03, -4.242599864662390e-03, -5.571211997201096e-03, -5.082881774510778e-03, -2.964608577266222e-03, -3.970956245910947e-18, 2.761054914221526e-03, 4.408671791291323e-03, 4.499893543282480e-03, 3.190702628375527e-03, 1.137454385437814e-03, -7.801764413479394e-04, -1.800035941954137e-03, -1.551508695295114e-03, -1.656972028983864e-04, 1.807916460888792e-03, 3.634185242463477e-03, 4.677804272874575e-03, 4.632024417128593e-03, 3.609601020585818e-03, 2.071774459723807e-03, 6.329529326777610e-04, -1.776435495005785e-04, -1.057986886315564e-04, 7.535081971563900e-04, 2.016855915317515e-03, 3.175814821556587e-03, 3.794893159287151e-03, 3.667901492374097e-03, 2.877649293179124e-03, 1.743911138008884e-03, 6.873152667877771e-04, 6.606288908585937e-05, 4.824211104697902e-05, 5.645021661912179e-04, 1.352511450996785e-03, 2.069556823475145e-03, 2.426092201082149e-03, 2.288932484013219e-03, 1.718145648341948e-03, 9.292556738959905e-04, 2.008611109311415e-04, -2.335314977018996e-04, -2.679652266877672e-04, 4.770313806696213e-05, 5.396603658561327e-04, 9.851678032909209e-04, 1.199203434827105e-03, 1.099558202260225e-03, 7.281328953482017e-04, 2.244219055801435e-04, -2.347105439226237e-04, -5.036107710443404e-04, -5.186269806469002e-04, -3.139652915166670e-04, -1.760458607779306e-18, 2.844296771284583e-04, 4.256783848540670e-04, 3.745719679893302e-04, 1.582373655473783e-04, -1.371968166954866e-04, -4.038352242339895e-04, -5.535900180450822e-04, -5.484714406629902e-04, -4.096699727120029e-04, -2.042397813028433e-04, -1.644985377823920e-05, 8.430618377456920e-05, 6.713348370805363e-05, -5.284819543167719e-05, -2.241936949441767e-04, -3.808943273886481e-04, -4.673350654380774e-04, -4.573425983466791e-04, -3.611872796436696e-04, -2.191747170206056e-04, -8.520621862538319e-05, -6.805060266824626e-06, -8.739382717882067e-06, -8.558099936607135e-05, -2.051516091989416e-04, -3.210588093186808e-04, -3.896255805435837e-04]

def Pause_sw():
    global flg_pause

    if flg_pause == True:flg_pause=False
    elif flg_pause==False:flg_pause=True

def Close_sw():
    global flg_close
    if flg_close == True:flg_close=False
    elif flg_close==False:flg_close=True

def FW_sw():
    global flg_FW
    if flg_FW==True:flg_FW=False
    elif flg_FW==False:flg_FW=True

def RW_sw():
    global flg_RW
    if flg_RW==True:flg_RW=False
    elif flg_RW==False:flg_RW=True

def Deley_FW():
    global flg_FW_d
    if flg_FW_d == True : flg_FW_d = False
    elif flg_FW_d == False:flg_FW_d = True

def Deley_RW():
    global flg_RW_d
    if flg_RW_d == True : flg_RW_d = False
    elif flg_RW_d == False:flg_RW_d = True

def main():
    global lpf1,lpf2,bpf,shift,flg_pause,flg_close,n,sample,flg_FW,flg_RW,skip,xmin,xmax,st_row,flg_RW_d,flg_FW_d,skip_d,slp

    argvs = sys.argv  # コマンドライン引数を格納したリストの取得
    argc = len(argvs) # 引数の個数
    print("EXEC||"+argvs[0])
    fname=FileSelectDialog(path="/Users/jins/Downloads")
    print('SOURCE||'+fname)
    try:
        df = pd.read_csv(fname, delimiter=',',skiprows=5, header=0,parse_dates=[2], encoding="shift-jis")
        d=np.array(df)
    except:
        sys.exit()

    accX=np.array(df[u'ACC_X'])
    accY=np.array(df[u'ACC_Y'])
    accZ=np.array(df[u'ACC_Z'])
    cnt=np.array(df[u'NUM'])
    BaseLine_x=0
    BaseLine_Balance = 0.03
    Margin = 0.25
    ymin,ymax = -128,127
    xmin,xmax = -128,127

    x_lpf2=fir(accX,lpf1)
    y_lpf2=fir(accY,lpf1)
    z_lpf2=fir(accZ,lpf1)
    x_bpf=fir(accX,bpf)
    y_bpf=fir(accY,bpf)
    z_bpf=fir(accZ,bpf)

    ### アプリケーション作成
    app = QtGui.QApplication([])
    app.quitOnLastWindowClosed()
    ### メインウィンドウ
    mainWindow = QtGui.QMainWindow()
    mainWindow.setWindowTitle("DataPlotter: "+fname) # Title
    ### キャンパス
    centralWid = QtGui.QWidget()
    mainWindow.setCentralWidget(centralWid)
    ### レイアウト
    grid = QtGui.QGridLayout()
    centralWid.setLayout(grid)

    ### 表示用ウィジット 1
    Wid1 = pg.PlotWidget(name="acc-XY")
    item1 = Wid1.getPlotItem()
    item1.addLegend()
    item1.setMouseEnabled(x=True,y=True)
    item1.setYRange(-6000,6000)
    item1.setXRange(-6000,6000, padding = 0)
    item1.showGrid(x=True,y=True)#,alpha=60)
    ### Axis
    specAxis = item1.getAxis("bottom")
    specAxis.setLabel("accX-accY")

    ### 表示用ウィジット 2
    Wid2 = pg.PlotWidget(name="accZ")
    item2 = Wid2.getPlotItem()
    item2.addLegend()
    item2.setMouseEnabled(x=True,y=True)
    item2.setYRange(np.nanmin(accZ), np.nanmax(accZ))
    item2.setXRange(0, sample)
    item2.showGrid(x=True,y=True,alpha=60)
    ### Axis
    specAxis = item2.getAxis("bottom")
    #ßßspecAxis.setLabel("accZ")

    ### スタートストップボタン
    btn1 = QtGui.QPushButton('Pause/ReStart')
    btn1.clicked.connect(Pause_sw)
    btn2 = QtGui.QPushButton('Close')
    btn2.clicked.connect(Close_sw)
    btn3 = QtGui.QPushButton('skip+'+str(skip)+'cnt')
    btn3.clicked.connect(FW_sw)
    btn4 = QtGui.QPushButton('skip-'+str(skip)+'cnt')
    btn4.clicked.connect(RW_sw)
##    btn5 = QtGui.QPushButton('Deley-'+str(skip_d)+'cnt')
    btn5 = QtGui.QPushButton(u'ゆっくり')
    btn5.clicked.connect(Deley_FW)
##    btn6 = QtGui.QPushButton('Deley+'+str(skip_d)+'cnt')
    btn6 = QtGui.QPushButton(u'スムーズ')
    btn6.clicked.connect(Deley_RW)

    ### キャンパスにのせる
    grid.addWidget(Wid1,0,0)
    grid.addWidget(Wid2,0,1)
    grid.addWidget(btn5,1,0)
    grid.addWidget(btn6,1,1)
    grid.addWidget(btn3,2,1)
    grid.addWidget(btn4,2,0)
    grid.addWidget(btn1,3,0)
    grid.addWidget(btn2,3,1)

    ### ウィンドウ表示
    mainWindow.showMaximized()
    #plt=item1.plot(x_lpf2,y_lpf2,pen='r',name="acc-XY")
##    arrow1 = pg.CurveArrow(item1)
##    arrow1.setStyle(angle=-60, tipAngle=30, baseAngle=20, headLen=40, tailLen=10,pen={'color': 'r', 'width': 30}, brush=None)
##    item1.addItem(arrow1)

##    item2.plot(cnt,accZ,clear=True,pen=[0,210,255],fillLevel=0, fillBrush=(0,210,255,90),name='acc-Z')
    item2.plot(cnt,z_bpf,pen=pg.mkPen(cosmetic=True, width=2, color=[50,100,255]),fillLevel=0, fillBrush=(0,210,255,90))
    item2.plot(cnt,x_bpf,pen=pg.mkPen(cosmetic=True, width=2, color=[255,100,50]),fillLevel=0, fillBrush=(255,210,0,90))
##    item2.plot(gyrZ,gyrY,pen='y',name='gyro-YZ')

    ### Update
    i=st_row
    while 1:
        if i>=len(df): #break
            msgbox = QtGui.QMessageBox.question(QtGui.QWidget(),'End Of Data','Replay?',QtGui.QMessageBox.Yes | QtGui.QMessageBox.No,QtGui.QMessageBox.No)
            if msgbox ==QtGui.QMessageBox.Yes:
                i = st_row
            else:
                break
        if flg_close==True :break
        if flg_pause == False :
            i+=slp
            if flg_FW == True:
                i+=skip
                flg_FW = False
            if flg_RW == True:
                i-=skip
                flg_RW = False
            if flg_FW_d == True :
                slp -= skip_d
                if slp<=0:slp=1
                flg_FW_d = False
            if flg_RW_d == True :
                #                slp -= skip_d
                if slp ==0 : slp += 1
                else: slp += skip_d;
                flg_RW_d = False
#            if skip_d<=0 : skip_d=0
            item1.plot(x_lpf2[i-sample:i],y_lpf2[i-sample:i], clear = True, pen=pg.mkPen(cosmetic=True, width=4.5, color='r'))
##            arrow1 = pg.CurveArrow(item1)
##            item1.addItem = arrow1
            item2.setXRange(i-sample*n, i+sample*n, padding = 0)
        QtGui.QApplication.processEvents()

    ### アプリケーションの実行と終了時の処理
##    sys.exit(app.exec_())

if __name__ == '__main__':
    main()
